@model EmpMng.ViewModel.PerformanceViewModel

@{
    ViewBag.Title = "Index";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.PerformanceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PerformanceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, "Employee", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmployeeId, (IEnumerable<SelectListItem>)ViewBag.EmployeeList, "---Select---", new { @class = "form-control", @id = "ddlEmployee" })
                @*@Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewDate, "Review Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "reviewDate" } })
                @Html.ValidationMessageFor(model => model.ReviewDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewScore, "Review Score", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewScore, new { htmlAttributes = new { @class = "form-control", @id = "reviewScore", type = "number", min = "0", step = "0.01" } })
                @Html.ValidationMessageFor(model => model.ReviewScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewNotes, "Review Notes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextAreaFor(model => model.ReviewNotes, new { htmlAttributes = new { @class = "form-control", @cols = "10" } })*@
                @Html.TextAreaFor(model => model.ReviewNotes, new { @maxlength = "500", @id = "reviewnote", @cols = "100", @rows = "4", @style = "width:100%;" })
                @Html.ValidationMessageFor(model => model.ReviewNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnAdd" value="Add" class="btn btn-primary" />
                @*<input type="button" id="btnEdit" value="Edit" class="btn btn-primary" style="display:none;" />*@
            </div>
        </div>
    </div>
    <hr />
}
<div class="card">
    <div class="card-header">

        <h3>Performance List: <span class="badge bg-success" id="totalCount"></span></h3>

    </div>
    <div class="card-body">
        <div class="row">
            <div style="height: 650px; overflow-x:scroll;overflow-x: auto;width: 100%; overflow-y: auto">
                <table class="table cell-border table-responsive table-hover table-striped" id="recordTable" @*style="display:none;"*@>
                    <thead>
                        <tr>

                            <th>Employee</th>
                            <th>Review Date</th>
                            <th>Review Score</th>
                            <th>Review Notes</th>
                            @*<th>Action</th>*@

                        </tr>
                    </thead>
                    <tbody id="recordTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.5.1.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">



<script>
    $(document).ready(function () {

        LoadData();

        $('#reviewScore').on('input', function () {
            var value = parseFloat($(this).val());
            if (value < 0 || value > 10) {
                alert("Budget must be a positive number and less than 11.");
                $(this).val(''); // Clear invalid input
            }
        });


            $("#btnAdd").click(function () {
            debugger;
            //var deptId = $("#DeptId").val();
            //if (deptId == "undefined") {
            //    deptId = 0;
            //}
                var employeeId = $("#ddlEmployee").val();
                var reviewDate = $("#reviewDate").val();
                var reviewScore = $("#reviewScore").val();
                var reviewnote = $("#reviewnote").val();
            //alert(deptName);
                var dataList = JSON.stringify({ employeeId: employeeId, reviewDate: reviewDate, reviewScore: reviewScore, reviewnote: reviewnote });
                if (employeeId != "" && reviewScore != "" && reviewDate!= "") {
                $.ajax({
                 type: 'POST',
                 contentType: 'application/json',
                 dataType: 'json',
                 url: '@Url.Action("AddOrEditEmpReview", "Performance")',
                 data: dataList,
                 beforeSend: function () {
                     $('#cover-spin').show();
                 },
                    success: function (data) {
                        //alert("Total Row Affected: " + data.saveDataCount);
                        var res = data;
                        swal.fire({
                            title: "Saved Successfully",
                            //text: "Total Row Affected: " + data.saveDataCount,
                            icon: "success",
                            button: "OK",
                            showClass: {
                                popup: 'animate__animated animate__fadeInDown'
                            },
                            hideClass: {
                                popup: 'animate__animated animate__fadeOutUp'
                            }
                        });
                        $('#cover-spin').hide();
                        event.preventDefault();
                        location.reload();
                }
             });
            }
        });


    });

    function LoadData () {
        cd = (new Date()).toISOString().split('T')[0];

                $.ajax({
                    type: 'POST',
                    contentType: 'application/json',
                    dataType: 'json',
                    url: '@Url.Action("GetAllEmpReview", "Performance")',
                    beforeSend: function () {
                        $('#cover-spin').show();
                    },
                    success: function (data) {

                        var DataList = data.Data.length;
                        $("#totalCount").text(DataList);
                        $("#recordTableBody").html("");
                        //$('#recordTable').DataTable().destroy();
                        if (DataList > 0) {
                            for (var i = 0; i < DataList; i++) {


                                var cSharpAddedDate = data.Data[i].ReviewDate;
                                var m = cSharpAddedDate != null ? new Date(parseInt(cSharpAddedDate.replace(/[^0-9 +]/g, ''))) : null;
                                var addedDateString = m != null ? m.getFullYear() + "-" + (m.getMonth() + 1) + "-" + m.getDate() : null;

                                $("#recordTableBody").append('<tr>' +

                                    //'<td style="display:none;">' +
                                    //data.Data[i].PerformanceId +
                                    //'</td>' +
                                    '<td style="width: 20%">' +
                                    data.Data[i].DepartmentName +
                                    '</td>' +
                                    //'<td style="width: 20%">' +
                                    //addedDateString +
                                    //'</td>' +
                                    '<td style="width: 15%">' +
                                    data.Data[i].ReviewScore +
                                    '</td>' +
                                    //'<td style="width: 45%">' +
                                    //data.Data[i].ReviewNotes +
                                    //'</td>' +
                                    //'<td>' +
                                    //'<button class="btn btn-success selectButton" data-index="${i}"><i class="fa fa-pencil"></i> Select</button>' +
                                    //'</td>' +
                                    '</tr>');
                            }
                            $('#recordTable').show();
                            //var table = $('#recordTable').DataTable();

                            //new $.fn.dataTable.Buttons(table, {
                            //    buttons: [
                            //        { extend: 'excel', className: 'excelBtn', title: 'Distributor Stock Report_' + cd, text: 'Click For Excel Export', filename: 'Distributor_Stock_' + cd }
                            //    ]
                            //});

                            //table.buttons(0, null).container().prependTo(
                            //    table.table().container()
                            //);


                        } else {
                            swal.fire({
                                title: "Message",
                                text: "Data Not Found",
                                icon: "warning",
                                button: "OK",
                                showClass: {
                                    popup: 'animate__animated animate__fadeInDown'
                                },
                                hideClass: {
                                    popup: 'animate__animated animate__fadeOutUp'
                                }
                            });
                        }
                        $('#cover-spin').hide();
                    }
                });


        }
</script>
